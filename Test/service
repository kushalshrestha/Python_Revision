/* The service calls OpenAI API (or Llama), validates SQL, and executes queries*/
package com.hmis.service;

import com.hmis.repository.HousingDataRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.http.*;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;

@Service
public class LLMQueryService {

    private static final String OPENAI_API_URL = "https://api.openai.com/v1/completions";
    private static final String API_KEY = "your-api-key";

    @Autowired
    private HousingDataRepository housingDataRepository;

    public String generateSQLFromText(String userQuery) {
        RestTemplate restTemplate = new RestTemplate();
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + API_KEY);
        headers.setContentType(MediaType.APPLICATION_JSON);

        String prompt = "Convert this natural language question into a safe SQL query: " + userQuery;

        Map<String, Object> requestBody = new HashMap<>();
        requestBody.put("model", "gpt-4");
        requestBody.put("prompt", prompt);
        requestBody.put("max_tokens", 100);

        HttpEntity<Map<String, Object>> request = new HttpEntity<>(requestBody, headers);
        ResponseEntity<String> response = restTemplate.postForEntity(OPENAI_API_URL, request, String.class);

        return response.getBody();
    }

    public boolean isValidQuery(String generatedQuery) {
        return generatedQuery.contains("housing_data") && generatedQuery.startsWith("SELECT");
    }

    public int executeValidatedQuery(LocalDate startDate) {
        return housingDataRepository.countNewlyHoused(startDate);
    }
}
